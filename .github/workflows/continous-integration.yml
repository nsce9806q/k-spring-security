## Workflow to perform CI on Java application with Gradle
## CI includes validation, build, check, and test.
name: CI - Validate, Build, Check, and Test Java application with Gradle

on:
  push:
    branches: [ main ]
    paths:
      - '**.java'
      - '**.gradle'
  pull_request:
    branches: [ main ]
    paths:
      - '**.java'
      - '**.gradle'

jobs:
  validate-build-check-and-test:
    name: "Validate, Build, Check, and Test Java Application"
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Validate Gradle wrapper
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Setup JDK and Gradle
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Build, check, and test
      - name: Execute Gradle Build(Build, Check(Lint), and Test)
        run: ./gradlew build

      # Report test results
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      # Measure test coverage
      - name: Execute Gradle Test Coverage
        run: ./gradlew testCoverage

      # We temporarily use jacoco-report action to add coverage to PR without codecov registration.
      # It will be better to use codecov action instead.
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          update-comment: true
